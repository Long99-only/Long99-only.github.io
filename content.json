{"meta":{"title":"SuperLong","subtitle":"愚人千虑 必有一得","description":"心有所向 无问东西","author":"Mr.Long","url":"http://example.com","root":"/"},"pages":[{"title":"tags","date":"2024-07-06T07:57:53.000Z","updated":"2024-07-06T07:59:26.830Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"我的第一篇hexo博客","slug":"Hexo-blog","date":"2024-07-07T09:27:09.159Z","updated":"2024-07-07T09:27:09.160Z","comments":true,"path":"2024/07/07/Hexo-blog/","permalink":"http://example.com/2024/07/07/Hexo-blog/","excerpt":"","text":"Hexo博客是的，你没有看错！ 不用服务器，不用注册域名，不用花钱，不用敲大代码等等 一个博客就值得你拥有 使用到的工具 （本教程统一在Windows系统下搭建） Node.js、Hexo、Git、Github账号 请自行注册一个Github账号 最后的部署到网上的博客展示 一、从创建到部署博客1、安装好Node.js别忘了用命令npm检验Node.js安装是否完成， 做完了这一步之后，恭喜你，前期的准备工作已经完成，环境这一步结束了。 2、安装好Git 3、关于hexo的安装教程比较简单，网上有很多完整的教程，在这里就不再赘述。安装Hexo 命令： cnpm install -g hexo-cli 查看版本 到这里需要在E盘下创建hexo文件夹 如果出现错误可以删除blog目录就可以重新部署了 4、sudo hexo init （初始化一个博客） 以下是他生成的目录 5、命令hexo server启动github服务器 6、浏览博客按照5中提示的网址http://localhost:4000/ 复制该网址在浏览器中打开，如下图所示：这样一个博客的架子就出来了。 7、部署前哨（一）：添加Github仓库地址在部署之前，我们需要先知道博客的部署地址，它需要对应 GitHub 的一个 Repository 的地址，这个信息需要我们来配置一下。(这里我就省略了，自己去布置)，这是我的这个Github仓库 打开文件Hexo下的blog文件根目录下的 _config.yml 文件，我使用编辑器vscode打开的（或者你使用其他代码编辑器打开，千万别用文本编辑器打开），找到 Deployment 这个地方(提示：文件最后)，把刚才新建的 Repository 的地址贴过来 8、部署前哨（二）：部署插件需要安装一个支持 Git 的部署插件： cnpm install –save hexo-deployer-git，有了它我们才可以顺利将其部署到 GitHub 上面(如果不安装的话，在执行部署命令时会报错). 9、下面开始部署到Github（可以先执行这步看是否报错，还需要发送公钥给github看10）如果8的插件部署没有问题就开始进行部署，首先输入部署命令如下：hexo deploy 结尾… 可以发现出现了上面的报错提示： Error: Spawn failed 解决方法第一次：我按照出现错误提示中的网址去打开它： https://hexo.io/docs/troubleshooting.html 并找到了部署到Github目前的语法规定的网页下 https://hexo.io/docs/github-pages 重新上传命令： hexo clean hexo g hexo d 最终出现下面的结果:说明出现的问题解决了 由于我起初没有部署仓库的密钥，所以要去仓库部署。 10、创建的 ssh 密钥的密码(1)、我打开了我得仓库，并找到了设置添加公钥 （2）查看部署密钥指南以了解更多信息 https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys 找到了设置密码的步骤（经过翻译以后，目前我们进行到下面的5） （3）怎么创建SSH密钥? 步骤： 找到本地环境：C:\\Users\\曹俊龙.ssh 这个路径下的用户&#x2F;名称&#x2F;.ssh 在这路径下，打开gitbub的命令控制台 (I)git init &#x2F;&#x2F;初始化一下，看看路径对不对 (II)ssh-keygen -t rsa -C “你的邮箱” 到本地环境.ssh路径下查看，是否生成id_rsa,id_rsa.pub这个两个文件 生成后，现在把id_rsa.pub文件里面的内容复制到githubd 的add github key 的key里面（也就是刚刚仓库的密钥添加的地方） 点击Add SSH key获得下面结果 注意：第一次提交，配置密钥，需要输入github的密码，如下就是添加秘钥成功 密钥配置成功后，要验证一下是否配置成功 命令：ssh -T &#103;&#105;&#x74;&#64;&#103;&#105;&#x74;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#x6d; 出现下面提示，说明配置成功。 Hi KangChou&#x2F;KangChou.github.io! You’ve successfully authenticated, but GitHub does not provide shell access 11、再次使用密钥部署仍然使用命令： hexo clean hexo g hexo d 出现Deploy done :git说明已经部署成功 这时候我们访问一下 GitHub Repository 同名的链接， 比如我的 KangChou 博客的 Repository 名称取的是 KangChou.github.io， 那我就访问 http://KangChou.github.io 这时候我们就可以看到跟本地一模一样的博客内容了。 （此时你用手机同样可以打开该网站） 二、博客的网页主题主题的设置包括中文页面、整个页面的样式、页面风格等等， 目前 Hexo 里面应用最多的主题基本就是 Next 主题， 这个主题还是挺好看的，并且它支持的一些插件和功能都极为丰富， 配置了这个主题，我们的博客可以支持更多的扩展功能，比如阅览进度条、中英文空格排版、图片懒加载等等。 1、下载主题打开我的电脑创建的Hexo文件夹下的blog目录， 单击右键Git bush输入下面的命令，执行结果如下： git clone https://github.com/theme-next/hexo-theme-next themes&#x2F;next 改完然后重新发布 hexo clean hexo g hexo server csdn也有大量文献修改主题的 三、更换域名相信所有做互联网开发的科技工作者都知道，如果拥有属于自己的网站一定得看起来很专业、很官方、很大气。因此，有些科技工作者就想更换自己网站的域名，让自己的域名看起来官方标准。也还有另一个原因，因为Github毕竟是外国网站，国内用户访问相对较慢，因此，如果有国内的域名作为辅助会事半功倍。事实上，我个人觉得只要可以搭建网站，即便是不换域名也没什么区别。不过，既然我给大家写这个教程，我还是有必要说一下，毕竟有很多人还是愿意换域名的。如果不想花钱买域名的，这一小节可以跳过。 购买域名+注册阿里网+实名认证自行注册，如果你是在校大学生，包括硕士、博士购买域名都是有学生价优惠的，但是一定要使用自己在学校注册的电子邮箱，因为阿里云官网数据库可以识别你的学生信息的学年期限。此外，注册以后一定要进行学生认证、实名认证。 然后去买域名，域名的形式有很多，按照自己的需求进行设置域名名称和域名后缀。（实名认证最快是两天的时间）https://www.aliyun.com/ 1、在阿里云添加域名解析ping你的http://github.io域名，得到一个IP 修改你的域名解析记录 添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”， 这样通过https://kangchou001.cn/就能访问到你的博客了 ****18、填写绑定的域名在你的本地文件下也就是hexo—&gt;你的博客（我的是long99-only）本地目录下找到 文件夹source ，并在该文件目录下面新建一个文件CNAME文件，那么一定要注意创建的CNAME文件没有任何扩展名（切记） 再一次使用部署三命令hexo cleanhexo ghexo d****完成以后，进入Github设置，找到 Custom domain添加域名后保存即可 19、刷新网页+更改域名成功 如果上面的17没有出错的话，那么你填完域名保存以后会出现下面的结果 那么就是更改域名成功了，此时你只需要点击上图的域名就可以访问啦。 ……到此完成了本博客的搭建……————————————————","categories":[],"tags":[]},{"title":"","slug":"yum源","date":"2024-07-06T07:10:28.287Z","updated":"2024-07-06T07:10:06.136Z","comments":true,"path":"2024/07/06/yum源/","permalink":"http://example.com/2024/07/06/yum%E6%BA%90/","excerpt":"","text":"前言：更改CentOS 7的YUM源更改CentOS 7的YUM源是一种常见的操作，可以帮助加快软件包的下载速度并提高系统软件更新的效率。以下是分别更改为网易、阿里云和清华大学的YUM源的示例案例： 1、更改为网易YUM源：备份当前的YUM源文件： sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak 下载网易的YUM源文件： sudo wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo 清除YUM缓存： sudo yum clean all 更新YUM缓存并测试YUM源是否可用： sudo yum makecache sudo yum update 2、更改为阿里云YUM源：备份当前的YUM源文件： sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak 下载阿里云的YUM源文件： sudo wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo 清除YUM缓存： sudo yum clean all 更新YUM缓存并测试YUM源是否可用： sudo yum makecache sudo yum update 3、更改为清华大学YUM源：备份当前的YUM源文件： sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak 下载清华大学的YUM源文件： sudo wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.tuna.tsinghua.edu.cn/help/CentOS7-Base-TUNA.repo 清除YUM缓存： sudo yum clean all 更新YUM缓存并测试YUM源是否可用： sudo yum makecache sudo yum update 在每个步骤中，确保正确备份了原始YUM源文件，并验证新的YUM源文件是否可用以确保成功更改YUM源。","categories":[],"tags":[]},{"title":"","slug":"安装虚拟机","date":"2024-07-06T07:02:58.648Z","updated":"2024-05-22T01:45:39.720Z","comments":true,"path":"2024/07/06/安装虚拟机/","permalink":"http://example.com/2024/07/06/%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E6%9C%BA/","excerpt":"","text":"一、安装虚拟机(提前去Centos官网下载linux的iso镜像文件) https://www.centos.org/ 1.打开vmware，点击左上角文件按钮，选择新建虚拟机 2.选择典型安装（自定义安装比较麻烦，典型安装更便捷） 3.先不着急安装系统，建议选择稍后安装操作系统 4.安装的是linux系统，版本建议选择Centos 7 64位 5.给你的虚拟机起名字，并选择安装位置，不建议名字有中文，不建议安装到系统C盘 6.设置磁盘大小，一般情况选择将虚拟磁盘存储为单个文件 7.点击完成，虚拟机就创建完成了 二、虚拟机安装linux系统1.点击编辑虚拟机设置 2.选择cd&#x2F;dvd，连接选择使用iso映像文件，浏览选择刚开始下载的iso镜像文件，点击确定 3.开启此虚拟机，准备安装系统 4.鼠标点进去，用键盘的上下左右键选择Install Centos 7 5.选择系统语言 6.其他的不需要管，软件选择就选择最小安装，点击安装位置 7.下面选择我要配置分区，点击完成 8.点这里自动创建它们 9.点击完成 ​ 10.点击接受更改 11.系统安装前的设置就改完了，点击开始安装 12.安装的过程中，设置一下root密码 13.设置root密码，完成后点击完成 14.等待安装完成后，重启虚拟机，输入用户名和密码就可以进入终端进行操作了注意：登录时输入密码是不显示的","categories":[],"tags":[]},{"title":"","slug":"zabbix+grafana+睿象云报警集群","date":"2024-07-06T07:02:20.023Z","updated":"2024-07-06T06:57:05.002Z","comments":true,"path":"2024/07/06/zabbix+grafana+睿象云报警集群/","permalink":"http://example.com/2024/07/06/zabbix+grafana+%E7%9D%BF%E8%B1%A1%E4%BA%91%E6%8A%A5%E8%AD%A6%E9%9B%86%E7%BE%A4/","excerpt":"","text":"前言！！！！！！！！！！！一、grafana介绍grafana是一个开源的数据可视化和监控平台，用于实时分析和监控指标、日志和其他数据源。它提供了丰富的图表、面板和仪表盘，使用户可以轻松地创建自定义的数据可视 二、zabbix与grafana1.zabbix和grafana是两种不同的工具，但可以结合使用来实现更强大的监控和数据可视化功能。 2.zabbix是一种开源的网络监控和管理解决方案，它可以监控网络设备、服务器、应用程序和服务的性能和可用性。Zabbix提供了丰富的监控功能，包括实时监控、报警、事件处理和数据收集等。 3.grafana是一个开源的数据可视化平台，它可以与各种数据源集成，包括zabbix。通过将zabbix的监控数据导入grafana，用户可以创建自定义的仪表盘、图表和报表，以更直观和可视化的方式展示监控数据。 4.结合zabbix和grafana，用户可以利用zabbix的强大监控功能来收集数据，并使用grafana的灵活可视化工具来呈现这些数据。这样可以更直观地了解系统的性能和运行状况，帮助用户更好地分析和优化系统。三、睿象云 一、当前下载的版本号官网：https://www.zabbix.com/ zabbix-server 192.168.88.187 zabbix-agent 192.168.88.197 当前用的MySQL是8.0 准备工作 做域名解析（server端和agent端都需要）[root@zabbix-server ~]# vim /etc/hosts [root@zabbix-agent ~]# vim /etc/hosts 有epel源的注意：excludepkgs&#x3D;zabbix* 二、开始下载1、获取zabbix的repo源# rpm -Uvh https://repo.zabbix.com/zabbix/6.4/rhel/9/x86_64/zabbix-release-6.4-2.el9.noarch.rpm # dnf clean all （可清可不清） 2、安装Zabbix server，Web前端，agent#dnf install -y zabbix-server-mysql zabbix-web-mysql zabbix-apache-conf zabbix-sql-scripts zabbix-selinux-policy zabbix-agent #dnf install -y zabbix-get (用于获取被监控节点agent的数据) 3、安装mysql8.0[root@zabbix-server ~]#rpm -Uvh https://dev.mysql.com/get/mysql84-community-release-el9-1.noarch.rpm [root@zabbix-server ~]# yum install -y mysql-community-server [root@zabbix-server ~]# vim /etc/my.cnf [mysqld] skip_name_resolve = ON #跳过主机名解析 innodb_file_per_table = ON # innodb_buffer_pool_size = 256M #缓存池大小 max_connections = 2000 #最大连接数 log-bin = master-log #开启二进制日志 [root@zabbix-server ~]# grep &quot;password&quot; /var/log/mysqld.log [root@zabbix-server ~]# mysqladmin -uroot -p&quot;ae2mxtQ#?5?M&quot; password &quot;QWErtyuiop@123&quot; 4、 创建初始数据库产品手册 在数据库主机上运行以下代码。 # mysql -uroot -p&quot;password&quot; mysql&gt; create database zabbix character set utf8mb4 collate utf8mb4_bin; mysql&gt; create user zabbix@&quot;%&quot; identified by &#39;password&#39;; mysql&gt; grant all privileges on zabbix.* to zabbix@&quot;%&quot;; mysql&gt; set global log_bin_trust_function_creators = 1; （导入初始化数据） mysql&gt; flush privileges; mysql&gt;quit; 5、导入初始架构和数据，系统将提示您输入新创建的密码。[root@zabbix-server ~]# rpm -qa |grep zabbix [root@zabbix-server ~]# rpm -ql zabbix-sql-scripts [root@zabbix-server ~]# zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz | mysql --default-character-set=utf8mb4 -uzabbix -p zabbix # mysql -uroot -p&quot;密码&quot; mysql&gt; set global log_bin_trust_function_creators = 0; mysql&gt; flush privileges; 6、为Zabbix server配置数据库[root@zabbix-server ~]# vim /etc/zabbix/zabbix_server.conf ListenPort=10051 #默认监听端口 SourceIP=192.168.88.187 #发采样数据请求的IP（所有的agent也要配置SourceIP） DBHost=192.168.88.187 #数据库对外的主机 DBName=zabbix #数据库名称 DBUser=zabbix #数据库用户 DBPassword=keer #数据库密码 DBPort=3306 #数据库启动端口 当server端有多块网卡时，这里没有配置souceip的话是推送不了给server端的。但是，当server只有一块网卡的话不配souceip也可以推送给server端。 注意：如果是用的是nginx还需修改nginx的配置文件7、启动Zabbix server和agent进程启动Zabbix server和agent进程，并为它们设置开机自启： # systemctl restart zabbix-server zabbix-agent httpd php-fpm # systemctl enable zabbix-server zabbix-agent httpd php-fpm 访问：http://192.168.88.187/zabbix 用户：Admin 密码：zabbix 到这里server端配置完成！！！！！！！！ 数据库密码或ip改变时 三、在Zabbix6.4.6上面安装汉化包1、zabbix-server和WEB安装完成后，在设置语言时发现无法设置简体中文，原因为缺少简体中文语言包,需要安装 [root@zabbix-server ~]# yum install glibc-langpack-zh.x86_64 [root@zabbix-server ~]# localectl list-locales | grep zh [root@zabbix-server ~]# systemctl restart zabbix-server zabbix-agent httpd php-fpm （重启服务） 2、登录zabbix控制台设置语言为简体中文 四、在需要监控的服务器上安装zabbix的agent端1、有epel源的注意：excludepkgs&#x3D;zabbix* 2、安装zabbix的rpm包# rpm -Uvh https://repo.zabbix.com/zabbix/6.4/rhel/9/x86_64/zabbix-release-6.4-2.el9.noarch.rpm # dnf clean all （可清可不清） 3、安装zabbix-agent# dnf install -y zabbix-agent # dnf install -y zabbix-sender (用来测试数据能否推送给server端) 4、修改agent的配置文件[root@zabbix-agent ~]# vim /etc/zabbix/zabbix_agentd.conf 当server端有多块网卡时，这里没有配置souceip的话是推送不了给server端的。但是，当server只有一块网卡的话不配souceip也可以推送给server端。 5、启动agent#systemctl restart zabbix-agent # systemctl enable zabbix-agent 6、在web页面添加监控服务器的步骤1、添加主机群组 2、添加主机 3、添加监控项 4、触发器 5、当触发器有触发时需要做的操作 自定义消息内容 主题：服务器报警消息：告警主机:{HOST.NAME}告警地址:{HOST.IP}监控项目:{ITEM.NAME}监控取值:{ITEM.LASTVALUE}告警等级:{TRIGGER.SEVERITY}当前状态:{TRIGGER.STATUS}告警信息:{TRIGGER.NAME}告警时间:{EVENT.DATE} {EVENT.TIME}事件ID:{EVENT.ID} 主题：服务器已恢复消息：告警主机:{HOST.NAME}告警地址:{HOST.IP}监控项目:{ITEM.NAME}监控取值:{ITEM.LASTVALUE}告警等级:{TRIGGER.SEVERITY}当前状态:{TRIGGER.STATUS}告警信息:{TRIGGER.NAME}告警时间:{EVENT.DATE} {EVENT.TIME}事件ID:{EVENT.ID} 7、报警媒介看三阶段的zabbix笔记五、grafana安装1、下载源 https://grafana.com/yum install -y https://dl.grafana.com/enterprise/release/grafana-enterprise-9.2.0-1.x86_64.rpm 在grafana配置文件中去掉用户和密码的注释（可以不改，默认就是这个） [root@zabbixserver ~]# vim /etc/grafana/grafana.ini ...... # default admin user, created on startup admin_user = admin # default admin password, can be changed before first start of grafana, or in profile settings admin_password = admin 2、启动systemctl start grafana-server &#x2F;&#x2F;启动服务systemctl enable grafana-server &#x2F;&#x2F;开机自启动netstat -nltp | grep grafana &#x2F;&#x2F;端口号 3000 登录账号admin 密码admin 3、安装插件 有两种方法安装zabbix插件，上面的这个最简单 #grafana-cli plugins install alexanderzobnin-zabbix-app 4、配置zabbix数据源 到这里就完成数据源的配置了 5、在web端添加监控图表 6、配置监控项 需注意的事情： 六、睿象云报警平台1、需要注册登录睿象云 2、生成key安装睿象云 3、在server端配置睿象云 获取 Cloud Alert Agent 包 解压安装 怎么查看是否安装成功呢？？？？？？ 七、Grafana连接MySQL数据库取值上面介绍的是Grafana通过zabbix插件进行取值，是利用的zabbix的API，Grafana还可以通过数据库插件连接zabbix的数据库取值，Grafana的自定义查询功能，可以在SQL数据库中编写查询语句，扩展性更强，并且从数据库获取数值的用时会更少，图表显示的更加精确 Mysql是自带的插件，不用安装 添加数据源 添加相应信息，添加好后下滑保存 zabbix的插件处选择mysql 我们进入仪表盘编辑一个图表 可以在此处修改数据源为mysql 也可以在数据源的位置把mysql的数据源设置成默认，虽然不会修改原有的，但是再添加新的就省的调整了 同样是在此处编写要采集的数值，这些参数其实也就是SQL语句的参数，还可以点击Edit SQL直接编写SQL语句 感谢观看！！！！！！！！！！！！！！","categories":[],"tags":[]}],"categories":[],"tags":[]}